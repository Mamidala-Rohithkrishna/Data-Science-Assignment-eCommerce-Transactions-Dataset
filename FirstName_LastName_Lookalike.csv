# Import necessary libraries
import pandas as pd
from sklearn.metrics.pairwise import cosine_similarity

# Load datasets
customers = pd.read_csv('path/to/Customers.csv')
products = pd.read_csv('path/to/Products.csv')
transactions = pd.read_csv('path/to/Transactions.csv')

# Convert date columns to datetime format
customers['SignupDate'] = pd.to_datetime(customers['SignupDate'])
transactions['TransactionDate'] = pd.to_datetime(transactions['TransactionDate'])

# Merge datasets
merged_data = transactions.merge(products, on='ProductID').merge(customers, on='CustomerID')

# Feature engineering
user_profiles = merged_data.groupby('CustomerID').agg({
    'Price': 'sum',
    'Quantity': 'sum',
    'TotalValue': 'sum',
    'Category': lambda x: x.mode()[0],
    'Region': lambda x: x.mode()[0]
}).reset_index()

# One-hot encoding for categorical variables
user_profiles = pd.get_dummies(user_profiles, columns=['Category', 'Region'])

# Calculate similarity matrix
similarity_matrix = cosine_similarity(user_profiles.drop('CustomerID', axis=1))
similarity_df = pd.DataFrame(similarity_matrix, index=user_profiles['CustomerID'], columns=user_profiles['CustomerID'])

# Get top 3 lookalikes for the first 20 customers (C0001 - C0020)
lookalike_dict = {}

for customer_id in user_profiles['CustomerID'][:20]:
    similar_customers = similarity_df[customer_id].sort_values(ascending=False).index[1:4]
    scores = similarity_df[customer_id].sort_values(ascending=False).values[1:4]
    lookalike_dict[customer_id] = list(zip(similar_customers, scores))

# Create a DataFrame for lookalike recommendations
lookalike_df = pd.DataFrame.from_dict(lookalike_dict, orient='index', columns=['Lookalike1', 'Lookalike2', 'Lookalike3'])

# Extract customer IDs and scores into a suitable format
lookalike_csv_data = []

for customer_id, lookalikes in lookalike_dict.items():
    lookalike_csv_data.append({
        'CustomerID': customer_id,
        'Lookalike1_ID': lookalikes[0][0],
        'Lookalike1_Score': lookalikes[0][1],
        'Lookalike2_ID': lookalikes[1][0],
        'Lookalike2_Score': lookalikes[1][1],
        'Lookalike3_ID': lookalikes[2][0],
        'Lookalike3_Score': lookalikes[2][1],
    })

lookalike_csv_df = pd.DataFrame(lookalike_csv_data)
lookalike_csv_df.to_csv('FirstName_LastName_Lookalike.csv', index=False)
